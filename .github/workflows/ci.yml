name: CI checks

on: push

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        toolchain: [stable]
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@main
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{matrix.toolchain}}
          override: true
      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose --release --all

  build:
    name: Build target ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        toolchain: [stable]
        os: [ubuntu-latest]
        target:
          - wasm32-unknown-unknown

    steps:
      - uses: actions/checkout@main
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{matrix.toolchain}}
          override: true
      - name: Add target
        run: rustup target add ${{ matrix.target }}
      - name: cargo fetch
        uses: actions-rs/cargo@v1
        with:
          command: fetch
      - name: Build for target
        run: cargo build --verbose --no-default-features --target ${{ matrix.target }}

  bitrot:
    name: Bitrot check
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        toolchain: [stable]
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@main
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{matrix.toolchain}}
          override: true
      # Build benchmarks to prevent bitrot
      - name: Build benchmarks
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all --benches

  clippy:
    name: Clippy
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - name: Install minimal nightly with clippy
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          components: clippy
          override: true
      - name: Run clippy
        uses: actions-rs/clippy-check@v1
        with:
          name: Clippy
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-targets -- -D warnings -A incomplete-features

  fmt:
    name: Rustfmt
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - name: Install minimal nightly with rustfmt
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          components: rustfmt
          override: true
      # Ensure all code has been formatted with rustfmt
      - run: rustup component add rustfmt
      - name: Check formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
